{"version":3,"sources":["Config.js","UserPool.js","Components/Auth/Accounts.js","Components/Banner.js","Components/ErrorDisplay.js","Components/LoadingSpinner.js","Components/Notes/PollyWindow.js","Components/Notes/NoteDisplay.js","Components/Notes/NoteEntry.js","Routes/Notes.js","Routes/Login.js","Routes/Signup.js","Components/ErrorBoundary.js","App.js","index.js"],"names":["Config","UserPoolId","AppClientId","ApiURL","api","poolData","ClientId","CognitoUserPool","AccountContext","createContext","Account","props","useState","LoggedIn","setLoggedIn","useEffect","getSession","then","session","a","Promise","resolve","reject","user","Pool","getCurrentUser","err","getUserAttributes","attributes","results","attribute","Name","Value","token","getIdToken","getJwtToken","headers","Authorization","authenticate","Username","Password","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","data","console","log","onFailure","setError","newPasswordRequired","Provider","value","logout","signOut","children","Banner","history","useHistory","useContext","Container","Row","Col","sm","Button","size","onClick","push","ErrorDisplay","Alert","variant","error","message","LoadingSpinner","Spinner","className","animation","role","handleClose","setShow","Modal","show","onHide","Header","closeButton","Title","Body","url","controls","src","Footer","NoteDisplay","query","setQuery","apiQuery","setApiQuery","firstRun","setFirstRun","selAccent","setSelAccent","voice","setVoice","accents","american","display","name","australian","british","indian","welsh","noteFunctions","filterNotes","timer1","setTimeout","queryDelay","clearTimeout","NoteRows","notes","map","note","active","selNote","NoteId","id","handleSelectNote","width","Note","align","speakNote","deleteNote","deleting","languageOptions","Object","entries","item","voiceOptions","i","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","Append","searching","Table","striped","borderless","hover","colSpan","lg","Form","inline","Group","Label","srOnly","Control","as","NoteEntry","noteText","setNoteText","onSubmit","preventDefault","updateNote","addNote","controlId","column","type","updating","Notes","setNotes","setSelNote","notesLoaded","setNotesLoaded","setUpdating","setDeleting","setSearching","setHeaders","loading","setLoading","pollyUrl","setPollyUrl","curHeaders","loadNotes","getAPI","path","method","json","body","custHeader","req","Request","fetch","response","ok","Error","statusText","text","catch","custHeaders","apiRet","n","undefined","find","newText","newNote","parseInt","JSON","stringify","tempArr","sort","b","newNum","length","q","PollyWindow","username","setUsername","password","setPassword","loggingIn","setLoggingIn","to","event","UserPool","signUp","ErrorBoundary","state","errorInfo","hasError","this","setState","style","cursor","color","window","location","reload","Component","App","errorDelay","Login","Signup","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daf464ec.chunk.js","sourcesContent":["//Variables to replace\nconst poolId = 'eu-west-2_NLsiUZHjm'\nconst clientId = 'mdv4ljbutcvrncd6o3hfa0b8d'\nconst api = 'https://5vkktm9ibl.execute-api.eu-west-2.amazonaws.com/Prod'\n\nconst Config = {\n    UserPoolId: poolId,\n    AppClientId: clientId,\n    ApiURL: api + '/notes'\n}\n\nexport default Config","import { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport Config from './Config'\n\nconst poolData = {\n  UserPoolId: Config.UserPoolId,\n  ClientId: Config.AppClientId\n}\n\nexport default new CognitoUserPool(poolData);","import React, { useState, createContext, useEffect } from 'react';\nimport { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport Pool from '../../UserPool';\n\n\nconst AccountContext = createContext();\n\nconst Account = props => {\n\n  const [LoggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    getSession()\n      .then(session => {\n        setLoggedIn(true);\n      }, () => {\n        setLoggedIn(false);\n      });\n  }, [])\n  \n  const getSession = async () =>\n    await new Promise((resolve, reject) => {\n      const user = Pool.getCurrentUser();\n      \n      if (user) {\n        user.getSession(async (err, session) => {\n          if (err) {\n            reject();\n          } else {\n            const attributes = await new Promise((resolve, reject) => {\n              user.getUserAttributes((err, attributes) => {\n                if (err) {\n                  reject(err);\n                } else {\n                  const results = {};\n\n                  for (let attribute of attributes) {\n                    const { Name, Value } = attribute;\n                    results[Name] = Value;\n                  }\n\n                  resolve(results);\n                }\n              });\n            });\n\n            const token = session.getIdToken().getJwtToken()\n\n            resolve({\n              user,\n              headers: {\n                Authorization: token,\n                \"Content-Type\": \"application/json\"\n              },\n              ...session,\n              ...attributes\n            });\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n\n  const authenticate = async (Username, Password) =>\n    await new Promise((resolve, reject) => {\n      const user = new CognitoUser({ Username, Pool });\n      const authDetails = new AuthenticationDetails({ Username, Password });\n\n      user.authenticateUser(authDetails, {\n        onSuccess: data => {\n          console.log('onSuccess:', data);\n          resolve(data);\n          setLoggedIn(true);\n        },\n\n        onFailure: err => {\n          props.setError(err)\n          reject(err);\n        },\n\n        newPasswordRequired: data => {\n          props.setError(\"New Password Required\")\n          resolve(data);\n        }\n      });\n    });\n  \n  \n  const logout = () => {\n    const user = Pool.getCurrentUser();\n    if (user) \n      user.signOut();\n      setLoggedIn(false);\n  }\n\n  return (\n    <AccountContext.Provider value={{\n      authenticate,\n      getSession,\n      logout,\n      LoggedIn\n    }}>\n      {props.children}\n    </AccountContext.Provider>\n  );\n};\n\nexport { Account, AccountContext };","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AccountContext } from './Auth/Accounts';\n\nimport {Container, Row, Col, Button} from 'react-bootstrap';\n\nconst Banner = () =>{\n\n  const history = useHistory();\n\n  const { LoggedIn, logout } = useContext(AccountContext);\n\n  const handleLogout = () => {\n    logout()\n    history.push(\"/Login\")\n  }\n  return(\n    <header>\n      <Container>\n        <Row>\n        <Col sm=\"11\"><h1>Polly Notes Application</h1></Col>\n        <Col sm=\"1\">\n          {LoggedIn ? (\n            <Container>\n              <Button size=\"sm\" onClick={handleLogout}>Logout</Button>\n            </Container>\n          ) : ''}\n        </Col>\n        </Row>\n      </Container>\n    </header>\n  )\n};\n\nexport default Banner;","import { Alert }from 'react-bootstrap'\n\nconst ErrorDisplay = props => {\n    return (\n      <Alert variant=\"danger\" >{props.error.message}</Alert>\n    )\n}\n\nexport default ErrorDisplay","import {Spinner} from 'react-bootstrap'\n\nlet LoadingSpinner = () => {\n    return (\n        <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\nexport default LoadingSpinner","import {useEffect, useState} from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport LoadingSpinner from '../LoadingSpinner';\n\nexport default (props) => {\n  const handleClose = () => {props.setShow(false)}\n\n  return (\n    <Modal show={props.show} onHide={handleClose}>\n      <Modal.Header closeButton>\n          <Modal.Title>Listen To The Note</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        {(!props.url) ? <LoadingSpinner /> : <audio controls src={props.url}>Your browser does not support the<code>audio</code> element.</audio>}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n    </Modal>\n  )\n}","import {useEffect, useState} from 'react';\nimport {Container, Row, Col, Table, InputGroup, FormControl, Button, Form} from 'react-bootstrap';\nimport { HiSpeakerphone, HiOutlineTrash } from 'react-icons/hi';\nimport { GrEdit } from 'react-icons/gr';\nimport LoadingSpinner from '../LoadingSpinner';\n\nlet NoteDisplay = (props) =>{\n\n  const [query, setQuery] = useState(\"\")\n  const [apiQuery, setApiQuery] = useState(\"\")\n  const [firstRun, setFirstRun] = useState(true)\n  const [selAccent, setSelAccent] = useState(\"american\")\n  const [voice, setVoice] = useState(\"\")\n  const queryDelay = .25;\n\n  const accents = {\n    american: {display: 'American', voice: [{name: 'Joey'}, {name: 'Joanna'}]},\n    australian: {display: 'Australian', voice: [{name: 'Russell'}, {name: 'Nicole'}]},\n    british: {display: 'British', voice: [{name: 'Brian'}, {name: 'Amy'}]},\n    indian: {display: 'Indian', voice: [{name: 'Raveena'}]},\n    welsh:  {display: 'Welsh', voice: [{name: 'Geraint'}]}\n}\n\n  const handleDelete = (id) => {\n    props.noteFunctions.deleteNote(id)\n  }\n\n  const handleSpeak = (id) => {\n    props.noteFunctions.speakNote(id, voice)\n  }\n  \n  const handleEdit = (id) => {\n    props.noteFunctions.handleSelectNote(id)\n  }\n  \n  useEffect(async () => {\n    if (!firstRun) {\n    props.noteFunctions.filterNotes(apiQuery)\n    }\n  }\n  , [apiQuery])\n\n  useEffect(() => {\n    let timer1 = setTimeout(() => {\n      if (!firstRun) {\n        setApiQuery(query);\n      } else {setFirstRun(false)}\n    }, queryDelay * 1000);\n    return () => {\n      clearTimeout(timer1);\n    }\n  }, [query])\n\n  useEffect((() => {\n    setVoice(accents[selAccent].voice[0].name)\n  }), [selAccent])\n\n  useEffect(() => {\n    console.log(voice)\n  }, [voice])\n\n  const NoteRows = props.notes.map(note => {\n    return(\n      <tr key={note.NoteId}>\n        <td><Button active={(props.selNote.NoteId === note.NoteId) ? true : false}  variant=\"outline-info\" onClick={() => handleEdit(note.NoteId)}><GrEdit /></Button></td>\n        <td>{note.NoteId}</td>\n        <td width=\"70%\">{note.Note}</td>\n        <td width=\"20%\" align=\"right\"><Button onClick={() => handleSpeak(note.NoteId)} variant=\"outline-info\" ><HiSpeakerphone/></Button><Button onClick={() => handleDelete(note.NoteId)} variant=\"outline-info\" >{(props.deleting == note.NoteId) ? <LoadingSpinner /> : <HiOutlineTrash/>}</Button></td>\n      </tr>\n    )\n  })\n  const languageOptions = Object.entries(accents).map(item => <option key={item[0]} value={item[0]}>{item[1]['display']}</option>)\n  let voiceOptions = accents[selAccent].voice.map((item, i) => <option key={i} value={item.name}>{item.name}</option>)\n  \n  return(\n    <Container>\n      {}\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"search-heading\">Search Notes:</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"Search for\"\n          aria-label=\"SearchBox\"\n          aria-describedby=\"search-heading\"\n          value={query} onChange={e => setQuery(e.target.value)}\n        />\n        <InputGroup.Append>\n          <InputGroup.Text id=\"search-heading\">{props.searching ? <LoadingSpinner /> : null}</InputGroup.Text>\n        </InputGroup.Append>\n      </InputGroup>\n      <Table striped borderless hover size=\"sm\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>ID</th>\n            <th>Note</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {NoteRows}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colSpan=\"4\">\n              <Row>\n                <Col lg=\"7\"></Col>\n                <Col lg=\"5\">\n                <Form inline>\n                  <Form.Group>\n                    <Form.Label srOnly>\n                      Voice Accent\n                    </Form.Label>\n                    <InputGroup size=\"sm\">\n                      <InputGroup.Prepend size=\"sm\">\n                        <InputGroup.Text>Polly Accent and Voice:</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control as=\"select\" size=\"sm\" value={selAccent} onChange={e => setSelAccent(e.target.value)}>\n                        {languageOptions}\n                      </Form.Control>\n                      <Form.Control as=\"select\" size=\"sm\" value={voice} onChange={e => setVoice(e.target.value)}>\n                        {voiceOptions}\n                      </Form.Control>\n                    </InputGroup>\n                  </Form.Group>\n                  </Form>\n                </Col>\n              </Row>\n              \n            </td>\n          </tr>\n        </tfoot>\n      </Table>\n    </Container>\n  )\n};\n\nexport default NoteDisplay;","import { useState, useEffect } from 'react';\nimport {Container, Form, Row, Col, Button, InputGroup} from 'react-bootstrap';\nimport LoadingSpinner from '../LoadingSpinner';\n\nlet NoteEntry = (props) => {\n  \n  const [noteText, setNoteText] = useState(\"\")\n  \n  useEffect(() => {\n    if (props.selNote.Note){\n      setNoteText(props.selNote.Note)\n    } else {\n      setNoteText(\"\")\n    }\n  }, [props.selNote]) \n\n  const addNote = (e) => {\n    e.preventDefault()\n    if (noteText != \"\") {\n      if (props.selNote.NoteId != \"\") {\n        props.noteFunctions.updateNote(props.selNote, noteText)\n        setNoteText(\"\")\n      } else {\n        props.noteFunctions.addNote(noteText)\n        setNoteText(\"\")\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <Form onSubmit={(e) => addNote(e)}>\n        <Row>\n          <Col sm=\"11\"> \n            <Form.Group controlId=\"noteEditor\">\n              <Form.Label column sm=\"1\" srOnly>\n                Note\n              </Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                <InputGroup.Text>Note:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control value={noteText} onChange={e => setNoteText(e.target.value)} placeholder=\"Note Text....\"></Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Col>\n          <Col sm=\"1\" align=\"left\">\n            <Button variant=\"outline-primary\" type=\"submit\">{(props.updating) ? <LoadingSpinner /> : (props.selNote.NoteId == \"\") ? 'Add' : 'Update'}</Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  )\n}\n\nexport default NoteEntry;","import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PollyWindow from '../Components/Notes/PollyWindow'\nimport { AccountContext } from '../Components/Auth/Accounts';\nimport NoteDisplay from '../Components/Notes/NoteDisplay';\nimport NoteEntry from '../Components/Notes/NoteEntry';\nimport LoadingSpinner from '../Components/LoadingSpinner';\nimport Config from '../Config';\n\nfunction Notes(props) {\n    const [notes, setNotes] = useState([])\n    const [selNote, setSelNote] = useState({ \"NoteId\": \"\" })\n    const [notesLoaded, setNotesLoaded] = useState(false)\n    const [updating, setUpdating] = useState(false)\n    const [deleting, setDeleting] = useState(null)\n    const [searching, setSearching] = useState(false)\n    const [headers, setHeaders] = useState({})\n    const [show, setShow] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [pollyUrl, setPollyUrl] = useState(null);\n\n\n    const history = useHistory();\n\n    const { getSession } = useContext(AccountContext);\n\n    useEffect(() => {\n        getSession().then(async ({ headers }) => {\n            const curHeaders = await headers\n            setHeaders(curHeaders)\n            loadNotes(curHeaders)\n        }, (e) => {\n            console.log(e)\n            console.log(\"redirecting to login\")\n            history.push('/Login');\n        })\n    }, [])\n\n\n    const getAPI = async (path, method, json = false, body = \"\", custHeader = headers) => {\n        const url = Config.ApiURL\n        let req\n        switch (method) {\n            case 'post':\n                req = new Request(url + path, { method: method, headers: custHeader, body: body })\n                break\n            default:\n                req = new Request(url + path, { method: method, headers: custHeader })\n        }\n\n        return await fetch(req)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                return response\n            })\n            .then(response => {\n                setSearching(false)\n                return json ? response.json() : response.text()\n            })\n            .catch(response => {\n                console.log(response)\n                props.setError({\n                    \"message\": \"The API call returned an Error.\"\n                })\n                if (response == 'Unauthorized') {\n                    history.push(\"/Login\")\n                }\n                setShow(false)\n                setPollyUrl(null)\n                setLoading(false)\n                setUpdating(false)\n                setDeleting(null)\n                setSearching(false)\n            })\n    }\n\n    const loadNotes = async (custHeaders = headers) => {\n        const apiRet = await getAPI(\"\", 'get', true, \"\", custHeaders)\n        setNotes(apiRet)\n        setSelNote({ \"NoteId\": \"\" })\n        setNotesLoaded(true);\n        setUpdating(false)\n        setDeleting(null)\n    }\n\n    const noteFunctions = {\n        \"handleSelectNote\": (n) => {\n            if (selNote.NoteId === n || n === undefined) {\n                setSelNote({ \"NoteId\": \"\" })\n            } else {\n                setSelNote(notes.find(note => note.NoteId === n))\n            }\n        },\n        \"updateNote\": async (n, newText) => {\n            setUpdating(true)\n            const newNote = { \"NoteId\": parseInt(n.NoteId), \"Note\": newText }\n            await getAPI(\"\", 'post', false, JSON.stringify(newNote))\n            loadNotes()\n        },\n        \"addNote\": async (n) => {\n            setUpdating(true)\n            let tempArr = []\n            notes.map(item => tempArr.push(parseInt(item.NoteId)))\n            tempArr = tempArr.sort((a, b) => b - a)\n            // fix\n            const newNum = (tempArr.length > 0) ? (tempArr[0] + 1) : 1;\n            //fix\n            let newNote = {\n                \"NoteId\": newNum,\n                \"Note\": n\n            }\n\n            await getAPI(\"\", 'post', false, JSON.stringify(newNote))\n            loadNotes()\n        },\n        \"speakNote\": async (id, voice) => {\n            setShow(true)\n            setPollyUrl(null)\n            setPollyUrl(await getAPI('/' + id, 'post', true, JSON.stringify({ \"VoiceId\": voice })))\n        },\n        \"deleteNote\": async (id) => {\n            setDeleting(id);\n            await getAPI('/' + id, 'delete')\n            loadNotes()\n        },\n        \"filterNotes\": async (q) => {\n            console.log(\"filter with API:\" + q)\n            setSearching(true)\n            setNotes(await getAPI('/search?text=' + q, 'get', true))\n\n        }\n    }\n\n    return (\n        <div>\n            <PollyWindow show={show} setShow={setShow} loading={loading} url={pollyUrl} />\n            {(notesLoaded) ? <NoteDisplay searching={searching} deleting={deleting} notes={notes} noteFunctions={noteFunctions} selNote={selNote} /> : <LoadingSpinner />}\n            <NoteEntry updating={updating} selNote={selNote} noteFunctions={noteFunctions} />\n        </div>\n    );\n}\n\nexport default Notes;","import React, { useState, useContext } from \"react\";\nimport { AccountContext } from '../Components/Auth/Accounts';\nimport {Container, Form, Button, InputGroup} from 'react-bootstrap';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport LoadingSpinner from '../Components/LoadingSpinner';\n\nexport default (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const { authenticate, LoggedIn } = useContext(AccountContext);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setLoggingIn(true)\n    authenticate(username, password)\n      .then(data => {\n        history.push(\"/\")\n      })\n      .catch(err => {\n        setLoggingIn(false)\n      })\n  };\n\n  return (\n    <Container>\n      {(LoggedIn) ? <Redirect to='/' /> :\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId=\"username\">\n          <Form.Label srOnly>\n            Username:\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n                <InputGroup.Text>Username:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control value={username} onChange={event => setUsername(event.target.value)}></Form.Control>\n          </InputGroup>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label srOnly>\n            Password:\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n                <InputGroup.Text>Password:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"password\" value={password} onChange={event => setPassword(event.target.value)}></Form.Control>\n          </InputGroup>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">{(loggingIn) ? <LoadingSpinner /> : 'Login'}</Button>\n      </Form>\n    }\n    </Container>\n    \n  );\n};","import React, { useState } from 'react';\nimport {Container, Form, Button, InputGroup} from 'react-bootstrap';\nimport UserPool from '../UserPool';\n\nexport default () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    UserPool.signUp(username, password, [], null, (err, data) => {\n      if (err) console.error(err);\n      console.log(data);\n    });\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId=\"username\">\n          <Form.Label srOnly>\n            Username:\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n                <InputGroup.Text>Username:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control value={username} onChange={event => setUsername(event.target.value)}></Form.Control>\n          </InputGroup>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label srOnly>\n            Password:\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n                <InputGroup.Text>Password:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"password\" value={password} onChange={event => setPassword(event.target.value)}></Form.Control>\n          </InputGroup>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Signup</Button>\n      </Form>\n    </Container>\n  );\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ErrorBoundary extends Component {\n    state = {\n        error: '',\n        errorInfo: '',\n        hasError: false,\n    };\n    static getDerivedStateFromError(error) {\n        return { hasError: true, error };\n    }\n    componentDidCatch(error, errorInfo) {\n        // eslint-disable-next-line no-console\n        console.log({ error, errorInfo });\n        this.setState({ errorInfo });\n    }\n    render() {\n        const { hasError, errorInfo } = this.state;\n        if (hasError) {\n            return (\n                <div className=\"card my-5\">\n                    <div className=\"card-header\">\n                        <p>\n                            There was an error in loading this page. Check the API URL or errors in the logs of your list-function.{' '}\n                            <span\n                                style={{ cursor: 'pointer', color: '#0077FF' }}\n                                onClick={() => {\n                                    window.location.reload();\n                                }}\n                            >\n                                Reload this page\n                            </span>{' '}\n                        </p>\n                    </div>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\nErrorBoundary.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};","import { useState, useEffect, useContext } from 'react';\nimport { Account } from './Components/Auth/Accounts';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Banner from './Components/Banner';\nimport { Container } from 'react-bootstrap';\nimport ErrorDisplay from './Components/ErrorDisplay';\nimport Notes from './Routes/Notes'\nimport Login from './Routes/Login'\nimport Signup from './Routes/Signup'\nimport ErrorBoundary from './Components/ErrorBoundary'\n\nfunction App() {\n    const errorDelay = 5;\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        let timer1 = setTimeout(() => setError(null), errorDelay * 1000);\n\n        return () => {\n            try {\n                clearTimeout(timer1);\n            } catch { }\n        }\n    }, [error])\n\n    return (\n        <Account setError={setError} >\n            <Router>\n                <Banner />\n                {(error) ? <ErrorDisplay error={error} /> : null}\n                <Container className=\"main_app\">\n                    <Switch>\n                        <Route path=\"/Login\"><Login /></Route>\n                        <Route path=\"/Signup\"><Signup /></Route>\n                        <Route path=\"/\">\n                            <ErrorBoundary>\n                                <Notes setError={setError} />\n                            </ErrorBoundary>\n                        </Route>\n                    </Switch>\n                </Container>\n            </Router>\n        </Account>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}